basePath: /
definitions:
  models.Equipment:
    properties:
      expedition_id:
        example: 1
        type: integer
      id:
        example: 1
        type: integer
      name:
        example: GPS Navigator
        type: string
    type: object
  models.Point:
    properties:
      id:
        example: 1
        type: integer
      location:
        example: 69.164529, 35.138287
        type: string
      name:
        example: Teriberka
        type: string
    type: object
  models.User:
    properties:
      email:
        example: alex@example.com
        type: string
      id:
        example: 1
        type: integer
      name:
        example: Alex
        type: string
      password:
        example: password
        type: string
    type: object
host: localhost:8081
info:
  contact: {}
  title: Travel Planner
  version: "1.0"
paths:
  /equip:
    delete:
      description: Удалить снаряжение по ID
      parameters:
      - description: ID снаряжения
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Снаряжение удалено
        "400":
          description: Неверный ID
          schema:
            type: string
        "409":
          description: Ошибка удаления
          schema:
            type: string
      summary: Удалить снаряжение
      tags:
      - Equipment
    get:
      description: Получить список всего снаряжения или конкретный экземпляр по ID
      parameters:
      - description: ID снаряжения
        in: query
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Список снаряжения
          schema:
            items:
              $ref: '#/definitions/models.Equipment'
            type: array
        "400":
          description: Неверный ID
          schema:
            type: string
        "404":
          description: Снаряжение не найдено
          schema:
            type: string
      summary: Получить снаряжение
      tags:
      - Equipment
    patch:
      consumes:
      - application/json
      description: Частичное обновление данных снаряжения
      parameters:
      - description: ID снаряжения
        in: query
        name: id
        required: true
        type: integer
      - description: Обновляемые поля
        in: body
        name: equipment
        required: true
        schema:
          $ref: '#/definitions/models.Equipment'
      produces:
      - application/json
      responses:
        "200":
          description: Обновленное снаряжение
          schema:
            $ref: '#/definitions/models.Equipment'
        "400":
          description: Неверные данные
          schema:
            type: string
        "404":
          description: Снаряжение не найдено
          schema:
            type: string
        "409":
          description: Ошибка обновления
          schema:
            type: string
      summary: Обновить снаряжение
      tags:
      - Equipment
    post:
      consumes:
      - application/json
      description: Создать новое снаряжение
      parameters:
      - description: Данные снаряжения
        in: body
        name: equipment
        required: true
        schema:
          $ref: '#/definitions/models.Equipment'
      produces:
      - application/json
      responses:
        "201":
          description: Созданное снаряжение
          schema:
            $ref: '#/definitions/models.Equipment'
        "400":
          description: Ошибка валидации
          schema:
            type: string
        "409":
          description: Конфликт данных
          schema:
            type: string
      summary: Создать снаряжение
      tags:
      - Equipment
  /points:
    delete:
      description: Удаление точки по ID
      parameters:
      - description: ID точки
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Точка удалена
        "400":
          description: Неверный ID
          schema:
            type: string
        "404":
          description: Точка не найдена
          schema:
            type: string
      summary: Удалить точку
      tags:
      - Points
    get:
      description: Получить все точки или конкретную точку по ID
      parameters:
      - description: ID точки
        in: query
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ для одной точки
          schema:
            $ref: '#/definitions/models.Point'
        "400":
          description: Неверный ID
          schema:
            type: string
        "404":
          description: Точка не найдена
          schema:
            type: string
      summary: Получить точку/точки
      tags:
      - Points
    patch:
      consumes:
      - application/json
      description: Частичное или полное обновление данных точки
      parameters:
      - description: ID точки
        in: query
        name: id
        required: true
        type: integer
      - description: Обновленные данные
        in: body
        name: point
        required: true
        schema:
          $ref: '#/definitions/models.Point'
      produces:
      - application/json
      responses:
        "200":
          description: Обновленная точка
          schema:
            $ref: '#/definitions/models.Point'
        "400":
          description: Неверные данные
          schema:
            type: string
        "404":
          description: Точка не найдена
          schema:
            type: string
        "409":
          description: Конфликт данных
          schema:
            type: string
      summary: Обновить точку
      tags:
      - Points
    post:
      consumes:
      - application/json
      description: Добавление новой географической точки
      parameters:
      - description: Данные точки
        in: body
        name: point
        required: true
        schema:
          $ref: '#/definitions/models.Point'
      produces:
      - application/json
      responses:
        "201":
          description: Созданная точка
          schema:
            $ref: '#/definitions/models.Point'
        "400":
          description: Неверный формат данных
          schema:
            type: string
        "409":
          description: Конфликт данных
          schema:
            type: string
      summary: Создать новую точку
      tags:
      - Points
  /users:
    delete:
      description: Удаление пользователя по ID
      parameters:
      - description: ID пользователя
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Пользователь удален
        "400":
          description: Некорректный ID
          schema:
            type: string
        "404":
          description: Пользователь не найден
          schema:
            type: string
      summary: Удалить пользователя
      tags:
      - Users
    get:
      description: Возвращает конкретного пользователя по ID или всех пользователей,
        если ID не указан
      parameters:
      - description: ID пользователя
        in: query
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Данные пользователя
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Некорректный ID
          schema:
            type: string
        "404":
          description: Пользователь не найден
          schema:
            type: string
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Получить пользователя/пользователей
      tags:
      - Users
    patch:
      consumes:
      - application/json
      description: Частичное обновление данных пользователя. Пароль будет автоматически
        хеширован.
      parameters:
      - description: ID пользователя
        in: query
        name: id
        required: true
        type: integer
      - description: Обновляемые данные
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: Обновленные данные
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Некорректные данные
          schema:
            type: string
        "404":
          description: Пользователь не найден
          schema:
            type: string
        "409":
          description: Конфликт данных
          schema:
            type: string
      summary: Обновить пользователя
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Регистрация нового пользователя в системе
      parameters:
      - description: Данные пользователя
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Созданный пользователь
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Некорректные входные данные
          schema:
            type: string
        "409":
          description: Пользователь уже существует
          schema:
            type: string
        "500":
          description: Ошибка хеширования пароля
          schema:
            type: string
      summary: Создать пользователя
      tags:
      - Users
swagger: "2.0"
